from modules.nmap_scanner import scan_target
from modules.cve_fetcher import identify_vulnerabilities
from modules.report_generator import generate_report, save_scan_data
import itertools
import sys
import threading
import time

def animate_loading(message):
    for c in itertools.cycle(['.', '..', '...', '..']):
        if done:
            break
        sys.stdout.write(f'\r{message}{c}')
        sys.stdout.flush()
        time.sleep(0.5)
    sys.stdout.write('\r')

def main(target):
    global done
    done = False
    loading_thread = threading.Thread(target=animate_loading, args=("HAZOO Vulnerability Scanner - Starting scan",))
    loading_thread.start()

    scan_data = scan_target(target)
    done = True
    loading_thread.join()
    print(f"\nHAZOO Vulnerability Scanner - Scan data: {scan_data}")

    save_scan_data(scan_data, "scan_data.txt")

    print("HAZOO Vulnerability Scanner - Identifying vulnerabilities...")
    vulnerabilities = identify_vulnerabilities(scan_data)
    print(f"HAZOO Vulnerability Scanner - Identified vulnerabilities: {vulnerabilities}")

    print("HAZOO Vulnerability Scanner - Generating report...")
    generate_report(vulnerabilities)
    print("HAZOO Vulnerability Scanner - Scan complete. Reports generated as 'scan_data.txt' and 'vulnerability_report.txt'.")

if __name__ == "__main__":
    target = input("Enter the target IP address or domain: ")
    main(target)
